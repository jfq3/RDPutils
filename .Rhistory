head(otu_taxotu_tax)
head(tax_table(otu_tax))
import_otutab_taxa(in_file = "otu_03_tax_table.txt")
library(RDPutils)
getwd()
otu_tax <- import_otutab_taxa(in_file = "otu_03_tax_table.txt")
otu_tax
head(otu_taxotu_tax)
head(tax_table(otu_tax))
n.ranks
c("Domain", "Phylum", "Class", "Order", "Family", "Genus")[n.ranks]
library(RDPutils)
otu_tax <- import_otutab_taxa(in_file = "otu_03_tax_table.txt")
otu_tax
head(otu_taxotu_tax)
head(tax_table(otu_tax))
c("Domain", "Phylum", "Class", "Order", "Family", "Genus")[1:n.ranks]
head(tax)
rownames(tax) <- rownames(temp)
colnames(tax) <- c("Domain", "Phylum", "Class", "Order", "Family", "Genus")[1:n.ranks]
head(tax)
temp <- read.table(file = in_file, comment.char = "", header = TRUE, row.names = 1, stringsAsFactors = FALSE, sep = "\t")
otu <- temp[ , 1:ncol(temp)-1]
# Determine number of ranks.
n.ranks <- vector("integer")
for (i in 1:nrow(temp)) {
n.ranks[i] <- count_char_occurrences(":", temp[i, ncol(otu)+1])
}
max.taxa <- temp[which.max(n.ranks),ncol(otu)+1]
n.ranks <- max(n.ranks)
# Make tax_table
tax <- matrix(data = NA, nrow = nrow(temp), ncol = n.ranks)
rownames(tax) <- rownames(temp)
colnames(tax) <- c("Domain", "Phylum", "Class", "Order", "Family", "Genus")[1:n.ranks]
# Parse taxonomy
for (i in 1:nrow(temp)) {
l <- temp[i, ncol(temp)]
l <- gsub(":", "_", l)
l.s <- strsplit(l, split = ",", fixed = TRUE)
n <- length(l.s[[1]])
for (j in 1:n){
tax[i, j] <- l.s[[1]][j]
}
}
# Fi
# Fill NAs
for (i in 1:nrow(tax)) {
for (j in 1:ncol(tax)) {
if (is.na(tax[i,j])) {
t <- paste("uncl", tax[i, j-1], sep = "_")
for (n in j:ncol(tax)){
tax[i, n] <- t
}
}
}
}
head(tax)
dim(tax`)
dim(tax)
class(tax)
source('C:/R_My_Packages/RDPutils/R/import_otutab_taxa.R')
getwd()
dir()
otu_tax <- import_otutab_taxa(in_file = "otu_03_tax_table.txt")
otu_tax
head(otu_taxotu_tax)
head(otu_table(otu_tax))
head(tax_table(otu_tax))
library(RDPutils)
otu_tax <- import_otutab_taxa(in_file = "otu_03_tax_table.txt")
otu_tax
head(otu_table(otu_tax))
head(tax_table(otu_tax))
# setwd( "C:/Ubuntu/Shared_Folder/RDPutils_documentation")
otu <- import_otutab_taxa(in_file = "otu_03_table_only.txt")
head(otu)
class(otu)
getwd()
setwd("C:/R_My_Packages/RDPutils/inst/extdata")
in_file = "otu_03_tax_table.txt"
temp <- read.table(file = in_file, comment.char = "", header = TRUE, row.names = 1, stringsAsFactors = FALSE, sep = "\t")
n.ranks <- vector("integer")
for (i in 1:nrow(temp)) {
n.ranks[i] <- count_char_occurrences(":", temp[i, ncol(otu)+1])
}
max.taxa <- temp[which.max(n.ranks),ncol(otu)+1]
n.ranks <- max(n.ranks)
library(RDPutils)
temp <- read.table(file = in_file, comment.char = "", header = TRUE, row.names = 1, stringsAsFactors = FALSE, sep = "\t")
# Make OTU matrix
otu <- temp[ , 1:ncol(temp)-1]
# Determine number of ranks.
n.ranks <- vector("integer")
for (i in 1:nrow(temp)) {
n.ranks[i] <- count_char_occurrences(":", temp[i, ncol(otu)+1])
}
max.taxa <- temp[which.max(n.ranks),ncol(otu)+1]
n.ranks <- max(n.ranks)
# Make tax_table
max.taxa
test <- gsub("([a-z]:)", "\\1", max.taxa, perl=TRUE);
test
max.taxa
test <- sub("([a-z]:)+", "\\1", max.taxa, perl=TRUE);
test
test <- gsub("([a-z]:)+", "\\1", max.taxa, perl=TRUE);
test
max.taxa
sub("([a-z]:)+", "\\1", max.taxa, perl=TRUE);
which(max.taxa==":")
gregexpr(pattern =':',max.taxa)
gregexpr(pattern =':',max.taxa)[[1]]
gregexpr(pattern =':',max.taxa)[[1]][1]
gregexpr(pattern =':',max.taxa)
gregexpr(pattern =':',max.taxa)[1]
gregexpr(pattern =':',max.taxa)[[1]]
gregexpr(pattern =':',max.taxa)[[1]][1]
gregexpr(pattern =':',max.taxa)[[1]][ ]
lapply(strsplit(max.taxa, ''), function(x) which(x == ':'))
lapply(strsplit(max.taxa, ''), function(x) which(x == ':'))
gregexpr(pattern =':',max.taxa)[[1]][ ]
test <- lapply(strsplit(max.taxa, ''), function(x) which(x == ':'))
test
test[[1]]
test[[1]][1]
test[[1]]
list(test[[1]])
test[1]
test[1][2]
test[[1]][1]
test[[1]][2]
test <- test - 1
test <- test[[1]] - 1
test
test <- gsub("([a-z]:)+", "\\1", max.taxa, perl=TRUE);
test
length(test)
test <- lapply(strsplit(max.taxa, ''), function(x) which(x == ':'))
test <- test[[1]] - 1
length(test)
tax.code <- vector("character")
for (i in 1:length(test)) {
tax,code[i] <- substring(text = max.taxa, first = i, last = i + 1)
}
test <- lapply(strsplit(max.taxa, ''), function(x) which(x == ':'))
test <- test[[1]] - 1
tax.code <- vector("character")
for (i in 1:length(test)) {
tax.code[i] <- substring(text = max.taxa, first = i, last = i + 1)
}
tax.code
test <- lapply(strsplit(max.taxa, ''), function(x) which(x == ':'))
test <- test[[1]] - 1
tax.code <- vector("character")
for (i in test) {
tax.code[i] <- substring(text = max.taxa, first = i, last = i + 1)
}
tax.code
test <- lapply(strsplit(max.taxa, ''), function(x) which(x == ':'))
test <- test[[1]] - 1
test
class(test)
test[1]
test[2]
length(test)
test <- lapply(strsplit(max.taxa, ''), function(x) which(x == ':'))
test <- test[[1]] - 1
tax.code <- vector("character")
for (i in 1:length(test)) {
s <- test[i]
tax.code[i] <- substring(max.taxa, s, s + 1)
}
tax.code
tax.code <- replace(tax.code, tax.code, c("Domain", "Phylum", "Class", "Order", "Family", "Genus"))
tax.code
tax.code
test <- lapply(strsplit(max.taxa, ''), function(x) which(x == ':'))
test <- test[[1]] - 1
tax.code <- vector("character")
for (i in 1:length(test)) {
s <- test[i]
tax.code[i] <- substring(max.taxa, s, s + 1)
}
tax.code <- replace(tax.code, c("d:", "p:", "c:", "o:", "f:", "s:"), c("Domain", "Phylum", "Class", "Order", "Family", "Genus"))
tax.code
test <- lapply(strsplit(max.taxa, ''), function(x) which(x == ':'))
test <- test[[1]] - 1
tax.code <- vector("character")
for (i in 1:length(test)) {
s <- test[i]
tax.code[i] <- substring(max.taxa, s, s + 1)
}
original <-  c("d:", "p:", "c:", "o:", "f:", "s:")
final <- c("Domain", "Phylum", "Class", "Order", "Family", "Genus")
tax.code <- sub(original, final, tax.code)
tax.code
tax.code <- sub("d:", "Domain", tax.code)
tax.code
tax.code <- sub("d:", "Domain", tax.code)
tax.code <- sub("k:", "Kingdom", tax.code)
tax.code <- sub("p:", "Phylum", tax.code)
tax.code <- sub("c:", "Class", tax.code)
tax.code <- sub("o:", "Order", tax.code)
tax.code <- sub("f:", "Family", tax.code)
tax.code <- sub("g:", "Genus", tax.code)
tax.code <- sub("s:", "Species", tax.code)
tax.code
library(RDPutils)
rank.code
library(RDPutils)
getwd()
otu <- import_otutab_taxa("otutab_taxa_03.txt")
otu
setwd("C:/R_My_Packages/RDPutils/inst/extdata")
# setwd( "C:/Ubuntu/Shared_Folder/RDPutils_documentation")
library(phyloseq)
library(RDPutils)
suppressWarnings(suppressMessages(library(Biostrings)))
otu <- read.table(file = "otu_03_table_only.txt", header = TRUE, row.names = 1,
sep = '\t', comment.char = "")
head(otu)
my_otu <- otu_table(otu, taxa_are_rows = TRUE, errorIfNULL = TRUE)
class(my_otu)
# setwd( "C:/Ubuntu/Shared_Folder/RDPutils_documentation")
otu <- import_otutab_taxa(in_file = "otu_03_table_only.txt")
head(otu)
class(otu)
parse_taxonomy_usearch <- function (char.vec){
parse_taxonomy_default(strsplit(char.vec, ",", TRUE)[[1]])
}
otu <- import_biom(BIOMfilename = "otu_03_table_only.json", parseFunction = parse_taxonomy_usearch)
head(otu)
class(otu)
rdp_tax <- make_tax_table(in_file = "rdp_classified_03.txt", confidence = 0.8)
head(rdp_tax)
rank_names(rdp_tax)
taxa_names(rdp_tax)
class(rdp_tax)
u_tax <- import_utax_file(in_file = "utax_tax_table_03.txt", confidence = 0.8)
head(u_tax)
class(u_tax)
s_tax <- import_sintax_file(in_file = "sintax_tax_table.txt", confidence = 0.8)
head(s_tax)
class(s_tax)
otu_tax <- import_otutab_taxa(in_file = "otu_03_tax_table.txt")
otu_tax
head(otu_table(otu_tax))
head(tax_table(otu_tax))
biom_otu_tax <- import_biom("otu_03_tax_table.json", parseFunction = parse_taxonomy_usearch)
biom_otu_tax
my_tree <- read_tree("usearch_03_tree.nwk", errorIfNULL = TRUE)
my_tree
my_seqs <- readDNAStringSet("otus_03.fa", format = "fasta")
my_seqs
expt <- phyloseq(my_otu, my_tax, my_tree, my_seqs)
expt
setwd("C:/X_tutorial/bingbing_dec2/its2")
expt <- import_otutab_taxa("otutab_taxa_03.txt")
expt
head(tax_table(expt))
import_otutab_taxa
setwd("C:/R_My_New_Package/MyRutils/R")
source('C:/R_My_Packages/RDPutils/R/import_otutab_taxa.R')
library(RDPutils)
library(RDPutils)
# setwd( "C:/Ubuntu/Shared_Folder/RDPutils_documentation")
library(phyloseq)
library(RDPutils)
suppressWarnings(suppressMessages(library(Biostrings)))
otu <- read.table(file = "otu_03_table_only.txt", header = TRUE, row.names = 1,
sep = '\t', comment.char = "")
head(otu)
my_otu <- otu_table(otu, taxa_are_rows = TRUE, errorIfNULL = TRUE)
class(my_otu)
rm(my_otu)
rm(my_seqs)
rm (my_tax)
rm(my_tree)
head(otu)
rm(otu)
head(otu)
data(RDPutils)
# setwd( "C:/Ubuntu/Shared_Folder/RDPutils_documentation")
library(phyloseq)
library(RDPutils)
suppressWarnings(suppressMessages(library(Biostrings)))
otu <- read.table(file = "otu_03_table_only.txt", header = TRUE, row.names = 1,
sep = '\t', comment.char = "")
head(otu)
my_otu <- otu_table(otu, taxa_are_rows = TRUE, errorIfNULL = TRUE)
class(my_otu)
system.file("extdata", package = "RDPutils")
setwd(system.file("extdata", package = "RDPutils"))
library(phyloseq)
library(RDPutils)
suppressWarnings(suppressMessages(library(Biostrings)))
otu <- read.table(file = "otu_03_table_only.txt", header = TRUE, row.names = 1,
sep = '\t', comment.char = "")
head(otu)
my_otu <- otu_table(otu, taxa_are_rows = TRUE, errorIfNULL = TRUE)
class(my_otu)
suppressWarnings(suppressMessages(library(phyloseq)))
rm(otu)
rm(my_otu)
getwd()
setwd(system.file("extdata", package = "RDPutils"))
suppressWarnings(suppressMessages(library(phyloseq)))
suppressWarnings(suppressMessages(library(RDPutils)))
suppressWarnings(suppressMessages(library(Biostrings)))
otu <- read.table(file = "otu_03_table_only.txt", header = TRUE, row.names = 1,
sep = '\t', comment.char = "")
head(otu)
my_otu <- otu_table(otu, taxa_are_rows = TRUE, errorIfNULL = TRUE)
class(my_otu)
# setwd( "C:/Ubuntu/Shared_Folder/RDPutils_documentation")
otu <- import_otutab_taxa(in_file = "otu_03_table_only.txt")
head(otu)
class(otu)
parse_taxonomy_usearch <- function (char.vec){
parse_taxonomy_default(strsplit(char.vec, ",", TRUE)[[1]])
}
otu <- import_biom(BIOMfilename = "otu_03_table_only.json", parseFunction = parse_taxonomy_usearch)
head(otu)
class(otu)
rdp_tax <- make_tax_table(in_file = "rdp_classified_03.txt", confidence = 0.8)
head(rdp_tax)
rank_names(rdp_tax)
taxa_names(rdp_tax)
class(rdp_tax)
u_tax <- import_utax_file(in_file = "utax_tax_table_03.txt", confidence = 0.8)
head(u_tax)
class(u_tax)
s_tax <- import_sintax_file(in_file = "sintax_tax_table.txt", confidence = 0.8)
head(s_tax)
class(s_tax)
otu_tax <- import_otutab_taxa(in_file = "otu_03_tax_table.txt")
otu_tax
head(otu_table(otu_tax))
head(tax_table(otu_tax))
biom_otu_tax <- import_biom("otu_03_tax_table.json", parseFunction = parse_taxonomy_usearch)
biom_otu_tax
my_seqs <- readDNAStringSet("otus_03.fa", format = "fasta")
my_seqs
my_tree <- read_tree("usearch_03_tree.nwk", errorIfNULL = TRUE)
my_tree
expt <- phyloseq(my_otu, my_tax, my_tree, my_seqs)
expt
my_seqs <- readDNAStringSet("otus_03.fa", format = "fasta")
my_seqs
my_tree <- read_tree("usearch_03_tree.nwk", errorIfNULL = TRUE)
my_tree
expt <- phyloseq(my_otu, s_tax, my_tree, my_seqs)
expt
library(phyloseq)
?phyloseq
?`sample_data)
)
keep <- (sort(taxa_sums(expt)), decreasing = TRUE)[1:20]
keep <- sort(taxa_sums(expt), decreasing = TRUE)[1:20]
keep
keep <- sort(taxa_sums(expt), decreasing = TRUE)[1:20]
expt.top.20 <- prune_taxa(keep, expt)
tax_table(expt.top.20) <- rdp_tax
expt.top.20
library(phyloseq)
keep
names(keep)
keep <- names(sort(taxa_sums(expt), decreasing = TRUE)[1:20])
expt.top.20 <- prune_taxa(keep, expt)
tax_table(expt.top.20) <- rdp_tax
expt.top.20
head(tax_table(expt))
head(tax_table(expt.top.20))
expt
data(RDPutils)
file.path <- system.file("extdata", package = "RDPutils")
file.path
file.path <- system.file("extdata", package = "RDPutils")
suppressWarnings(suppressMessages(library(phyloseq)))
suppressWarnings(suppressMessages(library(RDPutils)))
suppressWarnings(suppressMessages(library(Biostrings)))
otu <- read.table(file = "file.path/otu_03_table_only.txt", header = TRUE, row.names = 1,
sep = '\t', comment.char = "")
head(otu)
my_otu <- otu_table(otu, taxa_are_rows = TRUE, errorIfNULL = TRUE)
class(my_otu)
file = "file.path/otu_03_table_only.txt"
file
file = "file.path/otu_03_table_only.txt"
file
getwd()
setwd(system.file("extdata", package = "RDPutils"))
suppressWarnings(suppressMessages(library(phyloseq)))
suppressWarnings(suppressMessages(library(RDPutils)))
suppressWarnings(suppressMessages(library(Biostrings)))
otu <- read.table(file = "otu_03_table_only.txt", header = TRUE, row.names = 1,
sep = '\t', comment.char = "")
head(otu)
my_otu <- otu_table(otu, taxa_are_rows = TRUE, errorIfNULL = TRUE)
class(my_otu)
library(RDPutils)
devtools::install(build_vignettes = TRUE)
library(RDPutils)
# setwd(system.file("extdata", package = "RDPutils"))
suppressWarnings(suppressMessages(library(phyloseq)))
suppressWarnings(suppressMessages(library(RDPutils)))
suppressWarnings(suppressMessages(library(Biostrings)))
otu <- read.table(file = "otu_03_table_only.txt", header = TRUE, row.names = 1,
sep = '\t', comment.char = "")
head(otu)
my_otu <- otu_table(otu, taxa_are_rows = TRUE, errorIfNULL = TRUE)
class(my_otu)
otu <- import_otutab_taxa(in_file = "otu_03_table_only.txt")
head(otu)
class(otu)
data(RDPutils)
devtools::build()
getwd()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
library(RDPutils)
?vignettes(RDPutils)
vignettes(RDPutils)
vignette(RDPutils)
vignette(package = "RDPutils")
head(u_tax)
devtools::build_vignettes()
library(RDPutils)
?RDPutils
library(RDPutils)
load(sam.data.rda)
load("C:/R_My_Packages/RDPutils/data/sam.data.rda")
View(sam.data)
load("sam_data.rda")
load("sam.data.rda")
sam.data
biom_otu_tax <- import_biom("otu_03_tax_table.json", parseFunction = parse_taxonomy_usearch)
biom_otu_tax
my_seqs <- readDNAStringSet("otus_03.fa", format = "fasta")
my_seqs
my_tree <- read_tree("usearch_03_tree.nwk", errorIfNULL = TRUE)
my_tree
load("sam.data.rda")
sam.data
my_sam <- sample_data(sam.data, errorIfNULL = TRUE)
expt <- phyloseq(my_otu, s_tax, my_tree, my_seqs)
expt
expt <- phyloseq(my_otu, my_sam, s_tax, my_tree, my_seqs)
expt
keep <- names(sort(taxa_sums(expt), decreasing = TRUE)[1:20])
expt.top.20 <- prune_taxa(keep, expt)
tax_table(expt.top.20) <- rdp_tax
expt.top.20
head(tax_table(expt))
head(tax_table(expt.top.20))
devtools::build()
data(RDPutils)
load("C:/R_My_Packages/RDPutils/data/sam.data.rda")
View(sam.data)
write.table(sam.data, file = "sam.data.txt", sep = "/t")
getwd()
sam.data <- read.table(file = "sam.data.txt", header = TRUE, row.names = 1, sep = "/t")
sam.data <- read.table(file = "sam.data.txt", header = TRUE, row.names = 1, sep = "/t")
otu_tax <- import_otutab_taxa(in_file = "otu_03_tax_table.txt")
otu_tax
head(otu_table(otu_tax))
head(tax_table(otu_tax))
biom_otu_tax <- import_biom("otu_03_tax_table.json", parseFunction = parse_taxonomy_usearch)
biom_otu_tax
my_seqs <- readDNAStringSet("otus_03.fa", format = "fasta")
my_seqs
read.table(file = "sam.data.txt", header = TRUE, row.names = 1, sep = "\t")
sam.data <- read.table(file = "sam.data.txt", header = TRUE, row.names = 1, sep = "\t")
my_sam <- sample_data(sam.data, errorIfNULL = TRUE)
otu <- read.table(file = "otu_03_table_only.txt", header = TRUE, row.names = 1,
sep = '\t', comment.char = "")
my_tree <- read_tree("usearch_03_tree.nwk", errorIfNULL = TRUE)
my_tree
sam.data
my_sam
expt <- phyloseq(my_otu, my_sam, s_tax, my_tree, my_seqs)
expt
my_sam <- sample_data(sam.data, errorIfNULL = TRUE)
my_sam
expt <- phyloseq(my_otu, my_sam, s_tax, my_tree, my_seqs)
expt
sample_data(expt)
getwd()
devtools::build()
install.packages("C:/R_My_Packages/RDPutils_1.3.0.tar.gz", repos = NULL, type = "source")
library(RDPutils)
?RDPutils
install.packages("C:/R_My_Packages/RDPutils_1.3.0.tar.gz", repos = NULL, type = "source")
warnings()
library(RDPutils)
?RDPutils
suppressWarnings(suppressMessages(library(phyloseq)))
suppressWarnings(suppressMessages(library(RDPutils)))
suppressWarnings(suppressMessages(library(Biostrings)))
otu <- read.table(file = "otu_03_table_only.txt", header = TRUE, row.names = 1,
sep = '\t', comment.char = "")
head(otu)
my_otu <- otu_table(otu, taxa_are_rows = TRUE, errorIfNULL = TRUE)
class(my_otu)
setwd("C:/R_My_Packages/RDPutils/vignettes")
sam.data <- read.table(file = "sam.data.txt", header = TRUE, row.names = 1, sep = "\t")
sam.data
load("C:/R_My_Packages/RDPutils/data/sam.data.rda")
load("C:/R_My_Packages/RDPutils/data/sam.data.rda")
View(sam.data)
